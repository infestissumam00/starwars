{"ast":null,"code":"import axiosInstance from 'core/Axios';\nimport { storeConstants, URLS } from 'library/common/constants';\nexport const fetchStarShips = () => dispatch => {\n  return axiosInstance.get(URLS.starships).then(({\n    status,\n    data\n  }) => {\n    if (status === 200) {\n      let dataForStore = [];\n      data.results.map(item => {\n        let dataForStoreItem = {};\n        dataForStoreItem.name = item.name;\n        dataForStoreItem.model = item.model;\n        dataForStoreItem.starShipClass = item.starship_class;\n        dataForStoreItem.manufacturer = item.manufacturer;\n        dataForStoreItem.costInCredit = item.cost_in_credit;\n        dataForStoreItem.length = item.length;\n        dataForStoreItem.crew = item.crew;\n        dataForStoreItem.passengers = item.passengers;\n        dataForStoreItem.maxAtmospheringSpeed = item.max_atmosphering_speed;\n        dataForStoreItem.hyperdriveRating = item.hyperdrive_rating;\n        dataForStoreItem.mglt = item.MGLT;\n        dataForStoreItem.cargoCapacity = item.cargo_capacity;\n        dataForStoreItem.conumables = item.consumables;\n        dataForStore.push(dataForStoreItem);\n      });\n      dispatch({\n        type: storeConstants.FETCH_STARSHIPS,\n        payload: dataForStore\n      });\n    }\n  }).catch(() => {\n    dispatch({\n      type: storeConstants.FETCH_STARSHIPS,\n      payload: []\n    });\n  });\n};","map":{"version":3,"sources":["/Users/dhawal/WebstormProjects/starwars/src/modules/StarShips/starShipsAction.js"],"names":["axiosInstance","storeConstants","URLS","fetchStarShips","dispatch","get","starships","then","status","data","dataForStore","results","map","item","dataForStoreItem","name","model","starShipClass","starship_class","manufacturer","costInCredit","cost_in_credit","length","crew","passengers","maxAtmospheringSpeed","max_atmosphering_speed","hyperdriveRating","hyperdrive_rating","mglt","MGLT","cargoCapacity","cargo_capacity","conumables","consumables","push","type","FETCH_STARSHIPS","payload","catch"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,YAA1B;AACA,SAASC,cAAT,EAAyBC,IAAzB,QAAqC,0BAArC;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAMC,QAAQ,IAAI;AAC5C,SAAOJ,aAAa,CACfK,GADE,CACEH,IAAI,CAACI,SADP,EAEFC,IAFE,CAEG,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,KAAsB;AACxB,QAAID,MAAM,KAAK,GAAf,EAAoB;AAChB,UAAIE,YAAY,GAAG,EAAnB;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAkBC,IAAD,IAAU;AACvB,YAAIC,gBAAgB,GAAG,EAAvB;AACAA,QAAAA,gBAAgB,CAACC,IAAjB,GAAwBF,IAAI,CAACE,IAA7B;AACAD,QAAAA,gBAAgB,CAACE,KAAjB,GAAyBH,IAAI,CAACG,KAA9B;AACAF,QAAAA,gBAAgB,CAACG,aAAjB,GAAiCJ,IAAI,CAACK,cAAtC;AACAJ,QAAAA,gBAAgB,CAACK,YAAjB,GAAgCN,IAAI,CAACM,YAArC;AACAL,QAAAA,gBAAgB,CAACM,YAAjB,GAAgCP,IAAI,CAACQ,cAArC;AACAP,QAAAA,gBAAgB,CAACQ,MAAjB,GAAyBT,IAAI,CAACS,MAA9B;AACAR,QAAAA,gBAAgB,CAACS,IAAjB,GAAwBV,IAAI,CAACU,IAA7B;AACAT,QAAAA,gBAAgB,CAACU,UAAjB,GAA8BX,IAAI,CAACW,UAAnC;AACAV,QAAAA,gBAAgB,CAACW,oBAAjB,GAAwCZ,IAAI,CAACa,sBAA7C;AACAZ,QAAAA,gBAAgB,CAACa,gBAAjB,GAAoCd,IAAI,CAACe,iBAAzC;AACAd,QAAAA,gBAAgB,CAACe,IAAjB,GAAwBhB,IAAI,CAACiB,IAA7B;AACAhB,QAAAA,gBAAgB,CAACiB,aAAjB,GAAiClB,IAAI,CAACmB,cAAtC;AACAlB,QAAAA,gBAAgB,CAACmB,UAAjB,GAA8BpB,IAAI,CAACqB,WAAnC;AACAxB,QAAAA,YAAY,CAACyB,IAAb,CAAkBrB,gBAAlB;AACH,OAhBD;AAiBAV,MAAAA,QAAQ,CAAC;AACLgC,QAAAA,IAAI,EAAEnC,cAAc,CAACoC,eADhB;AAELC,QAAAA,OAAO,EAAE5B;AAFJ,OAAD,CAAR;AAIH;AACJ,GA3BE,EA4BF6B,KA5BE,CA4BI,MAAM;AACTnC,IAAAA,QAAQ,CAAC;AACLgC,MAAAA,IAAI,EAAEnC,cAAc,CAACoC,eADhB;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GAjCE,CAAP;AAkCH,CAnCM","sourcesContent":["import axiosInstance from 'core/Axios';\nimport { storeConstants, URLS } from 'library/common/constants';\n\nexport const fetchStarShips = () => dispatch => {\n    return axiosInstance\n        .get(URLS.starships)\n        .then(({ status, data }) => {\n            if (status === 200) {\n                let dataForStore = [];\n                data.results.map((item) => {\n                    let dataForStoreItem = {};\n                    dataForStoreItem.name = item.name;\n                    dataForStoreItem.model = item.model;\n                    dataForStoreItem.starShipClass = item.starship_class;\n                    dataForStoreItem.manufacturer = item.manufacturer;\n                    dataForStoreItem.costInCredit = item.cost_in_credit;\n                    dataForStoreItem.length= item.length;\n                    dataForStoreItem.crew = item.crew;\n                    dataForStoreItem.passengers = item.passengers;\n                    dataForStoreItem.maxAtmospheringSpeed = item.max_atmosphering_speed;\n                    dataForStoreItem.hyperdriveRating = item.hyperdrive_rating;\n                    dataForStoreItem.mglt = item.MGLT;\n                    dataForStoreItem.cargoCapacity = item.cargo_capacity;\n                    dataForStoreItem.conumables = item.consumables;\n                    dataForStore.push(dataForStoreItem);\n                });\n                dispatch({\n                    type: storeConstants.FETCH_STARSHIPS,\n                    payload: dataForStore,\n                });\n            }\n        })\n        .catch(() => {\n            dispatch({\n                type: storeConstants.FETCH_STARSHIPS,\n                payload: [],\n            });\n        });\n};\n"]},"metadata":{},"sourceType":"module"}