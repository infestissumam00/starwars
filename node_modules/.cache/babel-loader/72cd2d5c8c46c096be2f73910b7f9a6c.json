{"ast":null,"code":"var _jsxFileName = \"/Users/dhawal/WebstormProjects/starwars/src/modules/Movies/index.js\";\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport React, { Component, forwardRef } from 'react';\nimport MaterialTable from \"material-table\";\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn'; // import { Calendar, Views, momentLocalizer } from 'react-big-calendar';\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n//\n// import { Dropdown, Checkbox, Button, Loader } from 'library/common/components';\n// import { identifiers } from 'library/common/constants';\n// import {\n//     createDropdownData,\n//     fetchFromStorage,\n//     fetchIdsFromSelectedDropdownValues,\n//     saveToStorage,\n// } from 'library/utilities';\n// import './bookingsStyles.scss';\n\nimport { fetchFilms } from './moviesAction';\nimport Header from \"../../library/common/components/Header\";\nimport { moviesTable } from \"./dataModel\"; //\n// const WAITLISTED = 'WAITLISTED';\n// const TENTATIVE = 'TENTATIVE';\n// const CONFIRMED = 'CONFIRMED';\n// const CANCELLED = 'CANCELLED';\n// const localizer = momentLocalizer(moment);\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))),\n  Check: forwardRef((props, ref) => React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))),\n  Clear: forwardRef((props, ref) => React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))),\n  Delete: forwardRef((props, ref) => React.createElement(DeleteOutline, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))),\n  DetailPanel: forwardRef((props, ref) => React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))),\n  Edit: forwardRef((props, ref) => React.createElement(Edit, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))),\n  Export: forwardRef((props, ref) => React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))),\n  Filter: forwardRef((props, ref) => React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))),\n  FirstPage: forwardRef((props, ref) => React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))),\n  LastPage: forwardRef((props, ref) => React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))),\n  NextPage: forwardRef((props, ref) => React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))),\n  PreviousPage: forwardRef((props, ref) => React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))),\n  ResetSearch: forwardRef((props, ref) => React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))),\n  Search: forwardRef((props, ref) => React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))),\n  SortArrow: forwardRef((props, ref) => React.createElement(ArrowDownward, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))),\n  ViewColumn: forwardRef((props, ref) => React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })))\n};\nexport class Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    document.title = 'Movies List';\n    const {\n      fetchFilms\n    } = this.props;\n    fetchFilms(); // this.fetchFilterValue();\n  }\n\n  render() {\n    const {\n      movies\n    } = this.props;\n    console.log(movies);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Header, {\n      history: this.props.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-12 justify-content-center align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        maxWidth: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(MaterialTable, {\n      icons: tableIcons,\n      columns: moviesTable,\n      data: movies,\n      title: \"Movies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  movies\n}) => {\n  return {\n    movies: movies.movies\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchFilms\n})(Movies);","map":{"version":3,"sources":["/Users/dhawal/WebstormProjects/starwars/src/modules/Movies/index.js"],"names":["moment","connect","React","Component","forwardRef","MaterialTable","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","fetchFilms","Header","moviesTable","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","Movies","state","componentDidMount","document","title","render","movies","console","log","history","maxWidth","mapStateToProps"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport { connect } from 'react-redux';\nimport React, {Component, forwardRef} from 'react';\nimport MaterialTable from \"material-table\";\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n// import { Calendar, Views, momentLocalizer } from 'react-big-calendar';\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n//\n// import { Dropdown, Checkbox, Button, Loader } from 'library/common/components';\n// import { identifiers } from 'library/common/constants';\n// import {\n//     createDropdownData,\n//     fetchFromStorage,\n//     fetchIdsFromSelectedDropdownValues,\n//     saveToStorage,\n// } from 'library/utilities';\n\n// import './bookingsStyles.scss';\nimport { fetchFilms } from './moviesAction';\nimport Header from \"../../library/common/components/Header\";\nimport {moviesTable} from \"./dataModel\";\n//\n// const WAITLISTED = 'WAITLISTED';\n// const TENTATIVE = 'TENTATIVE';\n// const CONFIRMED = 'CONFIRMED';\n// const CANCELLED = 'CANCELLED';\n\n// const localizer = momentLocalizer(moment);\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nexport class Movies extends Component {\n    state = {\n    };\n\n    componentDidMount() {\n        document.title = 'Movies List';\n        const { fetchFilms } = this.props;\n        fetchFilms();\n        // this.fetchFilterValue();\n    }\n\n    render() {\n        const { movies } = this.props;\n        console.log(movies)\n\n        return (\n            <div>\n                <Header history={this.props.history}/>\n                <div className='col-12 justify-content-center align-items-center'>\n                    <div style={{maxWidth: '100%'}}>\n                    <MaterialTable\n                        icons={tableIcons}\n                        columns={moviesTable}\n                        data={movies}\n                        title=\"Movies\"\n                    />\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ movies }) => {\n    return {\n        movies: movies.movies,\n    };\n};\n\n\nexport default connect(mapStateToProps, { fetchFilms })(Movies);\n"]},"metadata":{},"sourceType":"module"}