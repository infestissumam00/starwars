{"ast":null,"code":"var _jsxFileName = \"/Users/dhawal/WebstormProjects/starwars/src/library/common/components/Dropdown/index.js\";\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\nimport { validateInput } from 'library/utilities/Validators';\n\nconst Dropdown = ({\n  value,\n  field,\n  label,\n  testId,\n  options,\n  isMulti,\n  validators,\n  placeholder,\n  isSearchable,\n  isDisabled,\n  onChange\n}) => {\n  const [error, setError] = useState(null);\n\n  const handleChange = selectedOption => {\n    const inputError = validateInput(validators, selectedOption);\n    setError(inputError);\n    onChange(selectedOption, field, inputError);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"app-dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, label !== '' ? React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, label) : null, React.createElement(Select, {\n    \"data-test\": testId,\n    value: value,\n    options: options,\n    isMulti: isMulti,\n    isDisabled: isDisabled,\n    placeholder: placeholder,\n    isSearchable: isSearchable,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), error && error.error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, error.message));\n};\n\nexport default Dropdown;\nDropdown.propTypes = {\n  options: PropTypes.array.isRequired,\n  isMulti: PropTypes.bool,\n  placeholder: PropTypes.string,\n  isSearchable: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  validators: PropTypes.array,\n  value: PropTypes.array,\n  testId: PropTypes.string,\n  field: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func.isRequired\n};\nDropdown.defaultProps = {\n  isMulti: false,\n  placeholder: 'Please select',\n  isSearchable: false,\n  isDisabled: false,\n  validators: [],\n  testId: '',\n  field: '',\n  value: [],\n  label: ''\n};","map":{"version":3,"sources":["/Users/dhawal/WebstormProjects/starwars/src/library/common/components/Dropdown/index.js"],"names":["React","useState","Select","PropTypes","validateInput","Dropdown","value","field","label","testId","options","isMulti","validators","placeholder","isSearchable","isDisabled","onChange","error","setError","handleChange","selectedOption","inputError","message","propTypes","array","isRequired","bool","string","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,aAAT,QAA8B,8BAA9B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,KADgB;AAEhBC,EAAAA,KAFgB;AAGhBC,EAAAA,KAHgB;AAIhBC,EAAAA,MAJgB;AAKhBC,EAAAA,OALgB;AAMhBC,EAAAA,OANgB;AAOhBC,EAAAA,UAPgB;AAQhBC,EAAAA,WARgB;AAShBC,EAAAA,YATgB;AAUhBC,EAAAA,UAVgB;AAWhBC,EAAAA;AAXgB,CAAD,KAYX;AACJ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMkB,YAAY,GAAGC,cAAc,IAAI;AACrC,UAAMC,UAAU,GAAGjB,aAAa,CAACQ,UAAD,EAAaQ,cAAb,CAAhC;AACAF,IAAAA,QAAQ,CAACG,UAAD,CAAR;AACAL,IAAAA,QAAQ,CAACI,cAAD,EAAiBb,KAAjB,EAAwBc,UAAxB,CAAR;AACD,GAJD;;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,KAAK,KAAK,EAAV,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,KAAR,CAAf,GAAwC,IAD3C,EAEE,oBAAC,MAAD;AACE,iBAAWC,MADb;AAEE,IAAA,KAAK,EAAEH,KAFT;AAGE,IAAA,OAAO,EAAEI,OAHX;AAIE,IAAA,OAAO,EAAEC,OAJX;AAKE,IAAA,UAAU,EAAEI,UALd;AAME,IAAA,WAAW,EAAEF,WANf;AAOE,IAAA,YAAY,EAAEC,YAPhB;AAQE,IAAA,QAAQ,EAAEK,YARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAYGF,KAAK,IAAIA,KAAK,CAACA,KAAf,IAAwB;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BA,KAAK,CAACK,OAArC,CAZ3B,CADF;AAgBD,CArCD;;AAuCA,eAAejB,QAAf;AAEAA,QAAQ,CAACkB,SAAT,GAAqB;AACnBb,EAAAA,OAAO,EAAEP,SAAS,CAACqB,KAAV,CAAgBC,UADN;AAEnBd,EAAAA,OAAO,EAAER,SAAS,CAACuB,IAFA;AAGnBb,EAAAA,WAAW,EAAEV,SAAS,CAACwB,MAHJ;AAInBb,EAAAA,YAAY,EAAEX,SAAS,CAACuB,IAJL;AAKnBX,EAAAA,UAAU,EAAEZ,SAAS,CAACuB,IALH;AAMnBd,EAAAA,UAAU,EAAET,SAAS,CAACqB,KANH;AAOnBlB,EAAAA,KAAK,EAAEH,SAAS,CAACqB,KAPE;AAQnBf,EAAAA,MAAM,EAAEN,SAAS,CAACwB,MARC;AASnBpB,EAAAA,KAAK,EAAEJ,SAAS,CAACwB,MATE;AAUnBnB,EAAAA,KAAK,EAAEL,SAAS,CAACwB,MAVE;AAWnBX,EAAAA,QAAQ,EAAEb,SAAS,CAACyB,IAAV,CAAeH;AAXN,CAArB;AAcApB,QAAQ,CAACwB,YAAT,GAAwB;AACtBlB,EAAAA,OAAO,EAAE,KADa;AAEtBE,EAAAA,WAAW,EAAE,eAFS;AAGtBC,EAAAA,YAAY,EAAE,KAHQ;AAItBC,EAAAA,UAAU,EAAE,KAJU;AAKtBH,EAAAA,UAAU,EAAE,EALU;AAMtBH,EAAAA,MAAM,EAAE,EANc;AAOtBF,EAAAA,KAAK,EAAE,EAPe;AAQtBD,EAAAA,KAAK,EAAE,EARe;AAStBE,EAAAA,KAAK,EAAE;AATe,CAAxB","sourcesContent":["import React, { useState } from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\n\nimport { validateInput } from 'library/utilities/Validators';\n\nconst Dropdown = ({\n  value,\n  field,\n  label,\n  testId,\n  options,\n  isMulti,\n  validators,\n  placeholder,\n  isSearchable,\n  isDisabled,\n  onChange,\n}) => {\n  const [error, setError] = useState(null);\n\n  const handleChange = selectedOption => {\n    const inputError = validateInput(validators, selectedOption);\n    setError(inputError);\n    onChange(selectedOption, field, inputError);\n  };\n\n  return (\n    <div className=\"app-dropdown\">\n      {label !== '' ? <label>{label}</label> : null}\n      <Select\n        data-test={testId}\n        value={value}\n        options={options}\n        isMulti={isMulti}\n        isDisabled={isDisabled}\n        placeholder={placeholder}\n        isSearchable={isSearchable}\n        onChange={handleChange}\n      />\n      {error && error.error && <span className=\"text-danger\">{error.message}</span>}\n    </div>\n  );\n};\n\nexport default Dropdown;\n\nDropdown.propTypes = {\n  options: PropTypes.array.isRequired,\n  isMulti: PropTypes.bool,\n  placeholder: PropTypes.string,\n  isSearchable: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  validators: PropTypes.array,\n  value: PropTypes.array,\n  testId: PropTypes.string,\n  field: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nDropdown.defaultProps = {\n  isMulti: false,\n  placeholder: 'Please select',\n  isSearchable: false,\n  isDisabled: false,\n  validators: [],\n  testId: '',\n  field: '',\n  value: [],\n  label: '',\n};\n"]},"metadata":{},"sourceType":"module"}