{"ast":null,"code":"var _jsxFileName = \"/Users/dhawal/WebstormProjects/starwars/src/modules/Movies/index.js\";\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport MaterialTable from \"material-table\"; // import { Calendar, Views, momentLocalizer } from 'react-big-calendar';\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n//\n// import { Dropdown, Checkbox, Button, Loader } from 'library/common/components';\n// import { identifiers } from 'library/common/constants';\n// import {\n//     createDropdownData,\n//     fetchFromStorage,\n//     fetchIdsFromSelectedDropdownValues,\n//     saveToStorage,\n// } from 'library/utilities';\n// import './bookingsStyles.scss';\n\nimport { fetchFilms } from './moviesAction';\nimport Header from \"../../library/common/components/Header\";\nimport { moviesTable } from \"./dataModel\"; //\n// const WAITLISTED = 'WAITLISTED';\n// const TENTATIVE = 'TENTATIVE';\n// const CONFIRMED = 'CONFIRMED';\n// const CANCELLED = 'CANCELLED';\n// const localizer = momentLocalizer(moment);\n\nexport class Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.tableRef = React.createRef();\n    this.colRenderCount = 0;\n    this.state = {\n      text: 'text',\n      selecteds: 0,\n      data: [{\n        id: 1,\n        name: 'A1',\n        surname: 'B',\n        isMarried: true,\n        birthDate: new Date(1987, 1, 1),\n        birthCity: 0,\n        sex: 'Male',\n        type: 'adult',\n        insertDateTime: '1994-11-23T08:15:30-05:00',\n        time: new Date(1900, 1, 1, 14, 23, 35)\n      }, {\n        id: 2,\n        name: 'A2',\n        surname: 'B',\n        isMarried: false,\n        birthDate: new Date(1987, 1, 1),\n        birthCity: 34,\n        sex: 'Female',\n        type: 'adult',\n        insertDateTime: '1994-11-05T13:15:30Z',\n        time: new Date(1900, 1, 1, 14, 23, 35),\n        parentId: 1\n      }, {\n        id: 3,\n        name: 'A3',\n        surname: 'B',\n        isMarried: true,\n        birthDate: new Date(1987, 1, 1),\n        birthCity: 34,\n        sex: 'Female',\n        type: 'child',\n        insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\n        time: new Date(1900, 1, 1, 14, 23, 35),\n        parentId: 1\n      }, {\n        id: 4,\n        name: 'A4',\n        surname: 'Dede Dede Dede Dede Dede Dede Dede Dede',\n        isMarried: true,\n        birthDate: new Date(1987, 1, 1),\n        birthCity: 34,\n        sex: 'Female',\n        type: 'child',\n        insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\n        time: new Date(1900, 1, 1, 14, 23, 35),\n        parentId: 3\n      }, {\n        id: 5,\n        name: 'A5',\n        surname: 'C',\n        isMarried: false,\n        birthDate: new Date(1987, 1, 1),\n        birthCity: 34,\n        sex: 'Female',\n        type: 'child',\n        insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\n        time: new Date(1900, 1, 1, 14, 23, 35)\n      }, {\n        id: 6,\n        name: 'A6',\n        surname: 'C',\n        isMarried: true,\n        birthDate: new Date(1989, 1, 1),\n        birthCity: 34,\n        sex: 'Female',\n        type: 'child',\n        insertDateTime: new Date(2018, 1, 1, 12, 23, 44),\n        time: new Date(1900, 1, 1, 14, 23, 35),\n        parentId: 5\n      }],\n      columns: [{\n        title: 'Adı',\n        field: 'name',\n        filterPlaceholder: 'Adı filter',\n        tooltip: 'This is tooltip text'\n      }, {\n        width: 200,\n        title: 'Soyadı',\n        field: 'surname',\n        initialEditValue: 'test',\n        tooltip: 'This is tooltip text'\n      }, {\n        title: 'Evli',\n        field: 'isMarried'\n      }, {\n        title: 'Cinsiyet',\n        field: 'sex',\n        disableClick: true,\n        editable: 'onAdd'\n      }, {\n        title: 'Tipi',\n        field: 'type',\n        removable: false,\n        editable: 'never'\n      }, {\n        title: 'Doğum Yılı',\n        field: 'birthDate',\n        type: 'date'\n      }, {\n        title: 'Doğum Yeri',\n        field: 'birthCity',\n        lookup: {\n          34: 'İstanbul',\n          0: 'Şanlıurfa'\n        }\n      }, {\n        title: 'Kayıt Tarihi',\n        field: 'insertDateTime',\n        type: 'datetime'\n      }, {\n        title: 'Zaman',\n        field: 'time',\n        type: 'time'\n      }, {\n        title: 'Adı',\n        field: 'name',\n        filterPlaceholder: 'Adı filter',\n        tooltip: 'This is tooltip text'\n      }],\n      remoteColumns: [{\n        title: 'Avatar',\n        field: 'avatar',\n        render: rowData => React.createElement(\"img\", {\n          style: {\n            height: 36,\n            borderRadius: '50%'\n          },\n          src: rowData.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }),\n        tooltip: 'delakjdslkjdaskljklsdaj'\n      }, {\n        title: 'Id',\n        field: 'id'\n      }, {\n        title: 'First Name',\n        field: 'first_name',\n        defaultFilter: 'De'\n      }, {\n        title: 'Last Name',\n        field: 'last_name'\n      }]\n    };\n  }\n\n  // state = {\n  // };\n  componentDidMount() {\n    document.title = 'Movies List';\n    const {\n      fetchFilms\n    } = this.props;\n    fetchFilms(); // this.fetchFilterValue();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(MuiThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        maxWidth: '100%',\n        direction\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.selectedRows && this.state.selectedRows.length, React.createElement(MaterialTable, {\n      tableRef: this.tableRef,\n      columns: this.state.columns,\n      data: this.state.data,\n      title: \"Demo Title\",\n      onRowClick: (evt, selectedRow) => this.setState({\n        selectedRow\n      }),\n      options: {\n        fixedColumns: {\n          left: 2,\n          right: 0\n        },\n        tableLayout: 'fixed'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))), this.state.text, React.createElement(\"button\", {\n      onClick: () => this.tableRef.current.onAllSelected(true),\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Select\"), React.createElement(MaterialTable, {\n      title: React.createElement(Typography, {\n        variant: \"h6\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Remote Data Preview\"),\n      columns: [{\n        title: 'Avatar',\n        field: 'avatar',\n        render: rowData => React.createElement(\"img\", {\n          style: {\n            height: 36,\n            borderRadius: '50%'\n          },\n          src: rowData.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        })\n      }, {\n        title: 'Id',\n        field: 'id',\n        filterPlaceholder: 'placeholder'\n      }, {\n        title: 'First Name',\n        field: 'first_name'\n      }, {\n        title: 'Last Name',\n        field: 'last_name'\n      }],\n      options: {\n        filtering: true,\n        grouping: true,\n        groupTitle: group => group.data.length\n      },\n      data: query => new Promise((resolve, reject) => {\n        let url = 'https://reqres.in/api/users?';\n        url += 'per_page=' + query.pageSize;\n        url += '&page=' + (query.page + 1);\n        console.log(query);\n        fetch(url).then(response => response.json()).then(result => {\n          resolve({\n            data: result.data,\n            page: result.page - 1,\n            totalCount: result.total\n          });\n        });\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))));\n  } // render() {\n  //     const { movies } = this.props;\n  //     return (\n  //         <div>\n  //             <Header history={this.props.history}/>\n  //             <div className='col-10 justify-content-center align-items-center'>\n  //                 <MaterialTable\n  //                     columns={moviesTable}\n  //                     data={movies}\n  //                     title=\"Movies\"\n  //                 />\n  //             </div>\n  //\n  //         </div>\n  //     );\n  // }\n\n\n}\n\nconst mapStateToProps = ({\n  movies\n}) => {\n  return {\n    movies: movies.movies\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchFilms\n})(Movies);","map":{"version":3,"sources":["/Users/dhawal/WebstormProjects/starwars/src/modules/Movies/index.js"],"names":["moment","connect","React","Component","MaterialTable","fetchFilms","Header","moviesTable","Movies","tableRef","createRef","colRenderCount","state","text","selecteds","data","id","name","surname","isMarried","birthDate","Date","birthCity","sex","type","insertDateTime","time","parentId","columns","title","field","filterPlaceholder","tooltip","width","initialEditValue","disableClick","editable","removable","lookup","remoteColumns","render","rowData","height","borderRadius","avatar","defaultFilter","componentDidMount","document","props","theme","maxWidth","direction","selectedRows","length","evt","selectedRow","setState","fixedColumns","left","right","tableLayout","current","onAllSelected","margin","filtering","grouping","groupTitle","group","query","Promise","resolve","reject","url","pageSize","page","console","log","fetch","then","response","json","result","totalCount","total","mapStateToProps","movies"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport MaterialTable from \"material-table\";\n// import { Calendar, Views, momentLocalizer } from 'react-big-calendar';\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n//\n// import { Dropdown, Checkbox, Button, Loader } from 'library/common/components';\n// import { identifiers } from 'library/common/constants';\n// import {\n//     createDropdownData,\n//     fetchFromStorage,\n//     fetchIdsFromSelectedDropdownValues,\n//     saveToStorage,\n// } from 'library/utilities';\n\n// import './bookingsStyles.scss';\nimport { fetchFilms } from './moviesAction';\nimport Header from \"../../library/common/components/Header\";\nimport {moviesTable} from \"./dataModel\";\n//\n// const WAITLISTED = 'WAITLISTED';\n// const TENTATIVE = 'TENTATIVE';\n// const CONFIRMED = 'CONFIRMED';\n// const CANCELLED = 'CANCELLED';\n\n// const localizer = momentLocalizer(moment);\n\nexport class Movies extends Component {\n    // state = {\n    // };\n\n    componentDidMount() {\n        document.title = 'Movies List';\n        const { fetchFilms } = this.props;\n        fetchFilms();\n        // this.fetchFilterValue();\n    }\n\n    tableRef = React.createRef();\n\n    colRenderCount = 0;\n\n    state = {\n        text: 'text',\n        selecteds: 0,\n        data: [\n            { id: 1, name: 'A1', surname: 'B', isMarried: true, birthDate: new Date(1987, 1, 1), birthCity: 0, sex: 'Male', type: 'adult', insertDateTime: '1994-11-23T08:15:30-05:00', time: new Date(1900, 1, 1, 14, 23, 35) },\n            { id: 2, name: 'A2', surname: 'B', isMarried: false, birthDate: new Date(1987, 1, 1), birthCity: 34, sex: 'Female', type: 'adult', insertDateTime: '1994-11-05T13:15:30Z', time: new Date(1900, 1, 1, 14, 23, 35), parentId: 1 },\n            { id: 3, name: 'A3', surname: 'B', isMarried: true, birthDate: new Date(1987, 1, 1), birthCity: 34, sex: 'Female', type: 'child', insertDateTime: new Date(2018, 1, 1, 12, 23, 44), time: new Date(1900, 1, 1, 14, 23, 35), parentId: 1 },\n            { id: 4, name: 'A4', surname: 'Dede Dede Dede Dede Dede Dede Dede Dede', isMarried: true, birthDate: new Date(1987, 1, 1), birthCity: 34, sex: 'Female', type: 'child', insertDateTime: new Date(2018, 1, 1, 12, 23, 44), time: new Date(1900, 1, 1, 14, 23, 35), parentId: 3 },\n            { id: 5, name: 'A5', surname: 'C', isMarried: false, birthDate: new Date(1987, 1, 1), birthCity: 34, sex: 'Female', type: 'child', insertDateTime: new Date(2018, 1, 1, 12, 23, 44), time: new Date(1900, 1, 1, 14, 23, 35) },\n            { id: 6, name: 'A6', surname: 'C', isMarried: true, birthDate: new Date(1989, 1, 1), birthCity: 34, sex: 'Female', type: 'child', insertDateTime: new Date(2018, 1, 1, 12, 23, 44), time: new Date(1900, 1, 1, 14, 23, 35), parentId: 5 },\n        ],\n        columns: [\n            { title: 'Adı', field: 'name', filterPlaceholder: 'Adı filter', tooltip: 'This is tooltip text' },\n            { width: 200, title: 'Soyadı', field: 'surname', initialEditValue: 'test', tooltip: 'This is tooltip text' },\n            { title: 'Evli', field: 'isMarried' },\n            { title: 'Cinsiyet', field: 'sex', disableClick: true, editable: 'onAdd' },\n            { title: 'Tipi', field: 'type', removable: false, editable: 'never' },\n            { title: 'Doğum Yılı', field: 'birthDate', type: 'date' },\n            { title: 'Doğum Yeri', field: 'birthCity', lookup: { 34: 'İstanbul', 0: 'Şanlıurfa' } },\n            { title: 'Kayıt Tarihi', field: 'insertDateTime', type: 'datetime' },\n            { title: 'Zaman', field: 'time', type: 'time' },\n            { title: 'Adı', field: 'name', filterPlaceholder: 'Adı filter', tooltip: 'This is tooltip text' },\n        ],\n        remoteColumns: [\n            { title: 'Avatar', field: 'avatar', render: rowData => <img style={{ height: 36, borderRadius: '50%' }} src={rowData.avatar} />, tooltip: 'delakjdslkjdaskljklsdaj' },\n            { title: 'Id', field: 'id' },\n            { title: 'First Name', field: 'first_name', defaultFilter: 'De' },\n            { title: 'Last Name', field: 'last_name' },\n        ]\n    }\n\n    render() {\n        return (\n            <>\n                <MuiThemeProvider theme={theme}>\n                    <div style={{ maxWidth: '100%', direction }}>\n                        <Grid container>\n                            <Grid item xs={12}>\n                                {this.state.selectedRows && this.state.selectedRows.length}\n                                <MaterialTable\n                                    tableRef={this.tableRef}\n                                    columns={this.state.columns}\n                                    data={this.state.data}\n                                    title=\"Demo Title\"\n                                    onRowClick={((evt, selectedRow) => this.setState({ selectedRow }))}\n                                    options={{\n                                        fixedColumns: {\n                                            left: 2,\n                                            right: 0\n                                        },\n                                        tableLayout: 'fixed'\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                        {this.state.text}\n                        <button onClick={() => this.tableRef.current.onAllSelected(true)} style={{ margin: 10 }}>\n                            Select\n                        </button>\n                        <MaterialTable\n                            title={\n                                <Typography variant='h6' color='primary'>Remote Data Preview</Typography>\n                            }\n                            columns={[\n                                {\n                                    title: 'Avatar',\n                                    field: 'avatar',\n                                    render: rowData => (\n                                        <img\n                                            style={{ height: 36, borderRadius: '50%' }}\n                                            src={rowData.avatar}\n                                        />\n                                    ),\n                                },\n                                { title: 'Id', field: 'id', filterPlaceholder: 'placeholder' },\n                                { title: 'First Name', field: 'first_name' },\n                                { title: 'Last Name', field: 'last_name' },\n                            ]}\n                            options={{\n                                filtering: true,\n                                grouping: true,\n                                groupTitle: group => group.data.length,\n                            }}\n                            data={query => new Promise((resolve, reject) => {\n                                let url = 'https://reqres.in/api/users?'\n                                url += 'per_page=' + query.pageSize\n                                url += '&page=' + (query.page + 1)\n                                console.log(query);\n                                fetch(url)\n                                    .then(response => response.json())\n                                    .then(result => {\n                                        resolve({\n                                            data: result.data,\n                                            page: result.page - 1,\n                                            totalCount: result.total,\n                                        })\n                                    })\n                            })}\n                        />\n\n                    </div>\n                </MuiThemeProvider>\n            </>\n        );\n    }\n\n    // render() {\n    //     const { movies } = this.props;\n    //     return (\n    //         <div>\n    //             <Header history={this.props.history}/>\n    //             <div className='col-10 justify-content-center align-items-center'>\n    //                 <MaterialTable\n    //                     columns={moviesTable}\n    //                     data={movies}\n    //                     title=\"Movies\"\n    //                 />\n    //             </div>\n    //\n    //         </div>\n    //     );\n    // }\n}\n\nconst mapStateToProps = ({ movies }) => {\n    return {\n        movies: movies.movies,\n    };\n};\n\n\nexport default connect(mapStateToProps, { fetchFilms })(Movies);\n"]},"metadata":{},"sourceType":"module"}