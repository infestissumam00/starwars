{"ast":null,"code":"var _jsxFileName = \"/Users/dhawal/starwars/src/library/common/components/InputField/index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { validateInput } from 'library/utilities/Validators';\n\nconst InputField = ({\n  type,\n  validators,\n  onChange,\n  label,\n  field,\n  testId,\n  inputValue,\n  placeholder,\n  extraProps\n}) => {\n  const [error, setError] = useState(null);\n\n  const handleChange = event => {\n    const {\n      value\n    } = event.target;\n    const inputError = validateInput(validators, value);\n    setError(inputError);\n    onChange(value, field, inputError);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, label !== '' ? React.createElement(\"label\", {\n    htmlFor: \"inputField\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, label) : null, type === 'textarea' ? React.createElement(\"textarea\", Object.assign({}, extraProps, {\n    className: \"form-control rounded-0\",\n    \"data-test\": testId,\n    \"aria-describedby\": \"inputField\",\n    placeholder: placeholder,\n    value: inputValue,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })) : React.createElement(\"input\", Object.assign({}, extraProps, {\n    type: type,\n    className: \"form-control rounded-0\",\n    \"data-test\": testId,\n    \"aria-describedby\": \"inputField\",\n    placeholder: placeholder,\n    value: inputValue,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), error && error.error && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, error.message));\n};\n\nInputField.propTypes = {\n  type: PropTypes.string,\n  inputValue: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  validators: PropTypes.array,\n  label: PropTypes.string,\n  testId: PropTypes.string,\n  placeholder: PropTypes.string,\n  field: PropTypes.string,\n  extraProps: PropTypes.object\n};\nInputField.defaultProps = {\n  validators: [],\n  label: '',\n  testId: '',\n  placeholder: '',\n  field: '',\n  type: 'text',\n  extraProps: {}\n};\nexport default InputField;","map":{"version":3,"sources":["/Users/dhawal/starwars/src/library/common/components/InputField/index.js"],"names":["React","useState","PropTypes","validateInput","InputField","type","validators","onChange","label","field","testId","inputValue","placeholder","extraProps","error","setError","handleChange","event","value","target","inputError","message","propTypes","string","isRequired","func","array","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { validateInput } from 'library/utilities/Validators';\n\nconst InputField = ({ type, validators, onChange, label, field, testId, inputValue, placeholder, extraProps }) => {\n  const [error, setError] = useState(null);\n\n  const handleChange = event => {\n    const { value } = event.target;\n    const inputError = validateInput(validators, value);\n    setError(inputError);\n    onChange(value, field, inputError);\n  };\n\n  return (\n    <div className=\"input-field\">\n      {label !== '' ? <label htmlFor=\"inputField\">{label}</label> : null}\n      {type === 'textarea' ? (\n        <textarea\n          {...extraProps}\n          className=\"form-control rounded-0\"\n          data-test={testId}\n          aria-describedby=\"inputField\"\n          placeholder={placeholder}\n          value={inputValue}\n          onChange={handleChange}\n        />\n      ) : (\n        <input\n          {...extraProps}\n          type={type}\n          className=\"form-control rounded-0\"\n          data-test={testId}\n          aria-describedby=\"inputField\"\n          placeholder={placeholder}\n          value={inputValue}\n          onChange={handleChange}\n        />\n      )}\n      {error && error.error && <span className=\"text-danger\">{error.message}</span>}\n    </div>\n  );\n};\n\nInputField.propTypes = {\n  type: PropTypes.string,\n  inputValue: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  validators: PropTypes.array,\n  label: PropTypes.string,\n  testId: PropTypes.string,\n  placeholder: PropTypes.string,\n  field: PropTypes.string,\n  extraProps: PropTypes.object,\n};\n\nInputField.defaultProps = {\n  validators: [],\n  label: '',\n  testId: '',\n  placeholder: '',\n  field: '',\n  type: 'text',\n  extraProps: {},\n};\n\nexport default InputField;\n"]},"metadata":{},"sourceType":"module"}