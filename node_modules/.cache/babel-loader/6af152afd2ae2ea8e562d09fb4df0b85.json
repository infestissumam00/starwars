{"ast":null,"code":"var _jsxFileName = \"/Users/dhawal/WebstormProjects/starwars/src/modules/HomePage/index.js\";\nimport React, { Component, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getAuth, setAuthentication } from 'library/common/actions';\nimport { Button } from 'library/common/components'; // import { URLS } from 'library/common/constants';\n// import axiosInstance from 'core/Axios';\n\nimport { homePageImage } from './constants';\nimport './homeStyles.scss';\nexport class HomePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.formRef = createRef();\n    this.state = {\n      isLoading: false,\n      loginError: null\n    };\n\n    this.handleNav = () => {\n      this.props.history.push('/movies');\n    };\n  }\n\n  componentDidMount() {// document.title = 'Login';\n    // this.props.getAuth();\n  }\n\n  // handleLogin = async e => {\n  //     e.preventDefault();\n  //     const values = this.formRef.getFormData();\n  //     const { formData, isFormValid } = values;\n  //     const { REACT_APP_CLIENT, REACT_APP_SECRET } = process.env;\n  //\n  //     if (isFormValid) {\n  //         this.setState({ isLoading: true });\n  //\n  //         const body = new URLSearchParams();\n  //         body.append('username', formData.username);\n  //         body.append('password', formData.password);\n  //         body.append('scope', 'webclient');\n  //         body.append('grant_type', 'password');\n  //\n  //         const config = {\n  //             headers: {\n  //                 'Content-Type': 'application/x-www-form-urlencoded',\n  //             },\n  //             auth: {\n  //                 username: REACT_APP_CLIENT,\n  //                 password: REACT_APP_SECRET,\n  //             },\n  //         };\n  //\n  //         axiosInstance\n  //             .post(URLS.login, body, config)\n  //             .then(({ status, data }) => {\n  //                 if (status === 200) {\n  //                     this.setState({ isLoading: false });\n  //                     this.props.setAuthentication(data);\n  //                 }\n  //             })\n  //             .catch(err => {\n  //                 if (err.hasOwnProperty('response') && (err.response.status === 401 || err.response.status === 400)) {\n  //                     this.setState({ isLoading: false, loginError: 'Login failed. Please check credentials again.' });\n  //                 } else {\n  //                     this.setState({ isLoading: false, loginError: 'Something went wrong. Please try again.' });\n  //                 }\n  //             });\n  //     } else {\n  //         this.setState({ isLoading: false, loginError: 'Please check form' });\n  //     }\n  // };\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"vh-100 login bg-white d-flex justify-content-center align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 home-background vh-100 p-0\",\n      style: {\n        backgroundImage: `url(${homePageImage})`,\n        backgroundSize: 'contain'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-5 button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      loading: isLoading,\n      onClick: this.handleNav,\n      styleClass: \"btn-success btn-block btn-style\",\n      value: \"Get Started\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  authReducer\n}) => {\n  return {};\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  getAuth,\n  setAuthentication\n})(HomePage));","map":{"version":3,"sources":["/Users/dhawal/WebstormProjects/starwars/src/modules/HomePage/index.js"],"names":["React","Component","createRef","connect","withRouter","getAuth","setAuthentication","Button","homePageImage","HomePage","formRef","state","isLoading","loginError","handleNav","props","history","push","componentDidMount","render","backgroundImage","backgroundSize","mapStateToProps","authReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,OAAT,EAAkBC,iBAAlB,QAA2C,wBAA3C;AACA,SAASC,MAAT,QAAuB,2BAAvB,C,CACA;AACA;;AAEA,SAASC,aAAT,QAA8B,aAA9B;AACA,OAAO,mBAAP;AAEA,OAAO,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;AAAA,SACpCS,OADoC,GAC1BR,SAAS,EADiB;AAAA,SAGpCS,KAHoC,GAG5B;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,UAAU,EAAE;AAFR,KAH4B;;AAAA,SAapCC,SAboC,GAaxB,MAAM;AACd,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACH,KAfmC;AAAA;;AAQpCC,EAAAA,iBAAiB,GAAG,CAChB;AACA;AACH;;AAMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEP,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,wEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAmD,MAAA,KAAK,EAAE;AAACS,QAAAA,eAAe,EAAG,OAAMZ,aAAc,GAAvC;AAA2Ca,QAAAA,cAAc,EAAE;AAA3D,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,OAAO,EAAET,SAFb;AAGI,MAAA,OAAO,EAAE,KAAKE,SAHlB;AAII,MAAA,UAAU,EAAC,iCAJf;AAKI,MAAA,KAAK,EAAC,aALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAHJ,CADJ,CADJ;AAsCH;;AAvGmC;;AA0GxC,MAAMQ,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AACzC,SAAO,EAAP;AAGH,CAJD;;AAMA,eAAenB,UAAU,CAACD,OAAO,CAACmB,eAAD,EAAkB;AAAEjB,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAlB,CAAP,CAAyDG,QAAzD,CAAD,CAAzB","sourcesContent":["import React, { Component, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { getAuth, setAuthentication } from 'library/common/actions';\nimport { Button } from 'library/common/components';\n// import { URLS } from 'library/common/constants';\n// import axiosInstance from 'core/Axios';\n\nimport { homePageImage } from './constants';\nimport './homeStyles.scss';\n\nexport class HomePage extends Component {\n    formRef = createRef();\n\n    state = {\n        isLoading: false,\n        loginError: null,\n    };\n\n    componentDidMount() {\n        // document.title = 'Login';\n        // this.props.getAuth();\n    }\n\n    handleNav = () => {\n        this.props.history.push('/movies')\n    };\n\n    // handleLogin = async e => {\n    //     e.preventDefault();\n    //     const values = this.formRef.getFormData();\n    //     const { formData, isFormValid } = values;\n    //     const { REACT_APP_CLIENT, REACT_APP_SECRET } = process.env;\n    //\n    //     if (isFormValid) {\n    //         this.setState({ isLoading: true });\n    //\n    //         const body = new URLSearchParams();\n    //         body.append('username', formData.username);\n    //         body.append('password', formData.password);\n    //         body.append('scope', 'webclient');\n    //         body.append('grant_type', 'password');\n    //\n    //         const config = {\n    //             headers: {\n    //                 'Content-Type': 'application/x-www-form-urlencoded',\n    //             },\n    //             auth: {\n    //                 username: REACT_APP_CLIENT,\n    //                 password: REACT_APP_SECRET,\n    //             },\n    //         };\n    //\n    //         axiosInstance\n    //             .post(URLS.login, body, config)\n    //             .then(({ status, data }) => {\n    //                 if (status === 200) {\n    //                     this.setState({ isLoading: false });\n    //                     this.props.setAuthentication(data);\n    //                 }\n    //             })\n    //             .catch(err => {\n    //                 if (err.hasOwnProperty('response') && (err.response.status === 401 || err.response.status === 400)) {\n    //                     this.setState({ isLoading: false, loginError: 'Login failed. Please check credentials again.' });\n    //                 } else {\n    //                     this.setState({ isLoading: false, loginError: 'Something went wrong. Please try again.' });\n    //                 }\n    //             });\n    //     } else {\n    //         this.setState({ isLoading: false, loginError: 'Please check form' });\n    //     }\n    // };\n\n    render() {\n        const { isLoading } = this.state;\n\n        return (\n            <div className=\"vh-100 login bg-white d-flex justify-content-center align-items-center\">\n                <div className=\"col-12 home-background vh-100 p-0\" style={{backgroundImage: `url(${homePageImage})`, backgroundSize: 'contain'}}>\n                    {/*<h1>Buy our product</h1>*/}\n                    {/*<img src={homePageImage} alt=\"background\" />*/}\n                    <div className=\"col-sm-5 button-container\">\n                        <Button\n                            type=\"submit\"\n                            loading={isLoading}\n                            onClick={this.handleNav}\n                            styleClass=\"btn-success btn-block btn-style\"\n                            value=\"Get Started\"\n                        />\n                    </div>\n                </div>\n                {/*<div className=\"col-7 login-form vh-100 d-flex justify-content-center align-items-center\">*/}\n                {/*    <div className=\"col-sm-5\">*/}\n                {/*        <h4 className=\"pb-4\">Sign In</h4>*/}\n                {/*        {!!loginError && <p className=\"text-danger\">{loginError}</p>}*/}\n                {/*        <form onSubmit={this.handleLogin}>*/}\n                {/*            <Form*/}\n                {/*                ref={el => {*/}\n                {/*                    this.formRef = el;*/}\n                {/*                }}*/}\n                {/*                model={loginFormModel}*/}\n                {/*            />*/}\n                {/*            <Button*/}\n                {/*                type=\"submit\"*/}\n                {/*                loading={isLoading}*/}\n                {/*                onClick={this.handleLogin}*/}\n                {/*                styleClass=\"btn-success btn-block\"*/}\n                {/*                value=\"Login\"*/}\n                {/*            />*/}\n                {/*        </form>*/}\n                {/*    </div>*/}\n                {/*</div>*/}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ authReducer }) => {\n    return {\n\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, { getAuth, setAuthentication })(HomePage));\n"]},"metadata":{},"sourceType":"module"}