{"ast":null,"code":"import axiosInstance from 'core/Axios';\nimport { storeConstants, URLS } from 'library/common/constants';\nexport const fetchSpecies = () => dispatch => {\n  return axiosInstance.get(URLS.species).then(({\n    status,\n    data\n  }) => {\n    if (status === 200) {\n      let dataForStore = [];\n      data.results.map(item => {\n        let dataForStoreItem = {};\n        dataForStoreItem.name = item.name;\n        dataForStoreItem.birthYear = item.birth_year;\n        dataForStoreItem.eyeColor = item.eye_color;\n        dataForStoreItem.gender = item.gender;\n        dataForStoreItem.hairColor = item.hair_color;\n        dataForStoreItem.height = item.height;\n        dataForStoreItem.mass = item.mass;\n        dataForStoreItem.skinColor = item.skin_color;\n        dataForStore.push(dataForStoreItem);\n      });\n      dispatch({\n        type: storeConstants.FETCH_SPECIES,\n        payload: dataForStore\n      });\n    }\n  }).catch(() => {\n    dispatch({\n      type: storeConstants.FETCH_SPECIES,\n      payload: []\n    });\n  });\n};","map":{"version":3,"sources":["/Users/dhawal/WebstormProjects/starwars/src/modules/Species/speciesAction.js"],"names":["axiosInstance","storeConstants","URLS","fetchSpecies","dispatch","get","species","then","status","data","dataForStore","results","map","item","dataForStoreItem","name","birthYear","birth_year","eyeColor","eye_color","gender","hairColor","hair_color","height","mass","skinColor","skin_color","push","type","FETCH_SPECIES","payload","catch"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,YAA1B;AACA,SAASC,cAAT,EAAyBC,IAAzB,QAAqC,0BAArC;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAMC,QAAQ,IAAI;AAC1C,SAAOJ,aAAa,CACfK,GADE,CACEH,IAAI,CAACI,OADP,EAEFC,IAFE,CAEG,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,KAAsB;AACxB,QAAID,MAAM,KAAK,GAAf,EAAoB;AAChB,UAAIE,YAAY,GAAG,EAAnB;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAkBC,IAAD,IAAU;AACvB,YAAIC,gBAAgB,GAAG,EAAvB;AACAA,QAAAA,gBAAgB,CAACC,IAAjB,GAAwBF,IAAI,CAACE,IAA7B;AACAD,QAAAA,gBAAgB,CAACE,SAAjB,GAA6BH,IAAI,CAACI,UAAlC;AACAH,QAAAA,gBAAgB,CAACI,QAAjB,GAA4BL,IAAI,CAACM,SAAjC;AACAL,QAAAA,gBAAgB,CAACM,MAAjB,GAA0BP,IAAI,CAACO,MAA/B;AACAN,QAAAA,gBAAgB,CAACO,SAAjB,GAA6BR,IAAI,CAACS,UAAlC;AACAR,QAAAA,gBAAgB,CAACS,MAAjB,GAA0BV,IAAI,CAACU,MAA/B;AACAT,QAAAA,gBAAgB,CAACU,IAAjB,GAAwBX,IAAI,CAACW,IAA7B;AACAV,QAAAA,gBAAgB,CAACW,SAAjB,GAA6BZ,IAAI,CAACa,UAAlC;AACAhB,QAAAA,YAAY,CAACiB,IAAb,CAAkBb,gBAAlB;AACH,OAXD;AAYAV,MAAAA,QAAQ,CAAC;AACLwB,QAAAA,IAAI,EAAE3B,cAAc,CAAC4B,aADhB;AAELC,QAAAA,OAAO,EAAEpB;AAFJ,OAAD,CAAR;AAIH;AACJ,GAtBE,EAuBFqB,KAvBE,CAuBI,MAAM;AACT3B,IAAAA,QAAQ,CAAC;AACLwB,MAAAA,IAAI,EAAE3B,cAAc,CAAC4B,aADhB;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GA5BE,CAAP;AA6BH,CA9BM","sourcesContent":["import axiosInstance from 'core/Axios';\nimport { storeConstants, URLS } from 'library/common/constants';\n\nexport const fetchSpecies = () => dispatch => {\n    return axiosInstance\n        .get(URLS.species)\n        .then(({ status, data }) => {\n            if (status === 200) {\n                let dataForStore = [];\n                data.results.map((item) => {\n                    let dataForStoreItem = {};\n                    dataForStoreItem.name = item.name;\n                    dataForStoreItem.birthYear = item.birth_year;\n                    dataForStoreItem.eyeColor = item.eye_color;\n                    dataForStoreItem.gender = item.gender;\n                    dataForStoreItem.hairColor = item.hair_color;\n                    dataForStoreItem.height = item.height;\n                    dataForStoreItem.mass = item.mass;\n                    dataForStoreItem.skinColor = item.skin_color;\n                    dataForStore.push(dataForStoreItem);\n                });\n                dispatch({\n                    type: storeConstants.FETCH_SPECIES,\n                    payload: dataForStore,\n                });\n            }\n        })\n        .catch(() => {\n            dispatch({\n                type: storeConstants.FETCH_SPECIES,\n                payload: [],\n            });\n        });\n};\n"]},"metadata":{},"sourceType":"module"}